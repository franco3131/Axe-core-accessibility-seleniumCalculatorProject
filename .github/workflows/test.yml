name: cucumber-axe

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  run-by-tag:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tags:
          - '@component-Division'
          - '@component-Addition'
          - '@component-EndToEnd'
          - '@component-Subtraction'
          - '@component-Multiplication'

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # Start clean so old reports don't get merged in
      - name: Clean axe dir
        run: rm -rf target/axe && mkdir -p target/axe

      - name: Build & test for ${{ matrix.tags }}
        env:
          CI: true
          # Uncomment to relax/tighten failure criteria controlled in AxeChecks
          # AXE_SKIP_RULES: document-title,html-has-lang
          # AXE_MIN_IMPACT: serious
          ORG_SLF4J_SIMPLELOGGER_LOG_ORG_APACHE_HC_CLIENT5_HTTP: warn
          ORG_SLF4J_SIMPLELOGGER_LOG_ORG_APACHE_HC_CLIENT5_HTTP_WIRE: off
        run: mvn -q test -Dcucumber.filter.tags="${{ matrix.tags }}"

      # See exactly what was generated
      - name: List axe files
        if: always()
        run: |
          echo "== target/axe =="
          ls -al target/axe || true
          echo "FAIL count: $(ls -1 target/axe/FAIL-*.json 2>/dev/null | wc -l)"
          echo "ALL  count:  $(ls -1 target/axe/*.json 2>/dev/null | wc -l)"

      # Upload per-tag JSONs (includes FAIL-*.json if any)
      - name: Upload axe JSON (per tag)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: axe-json-${{ matrix.tags }}   # unique per tag to avoid 409 conflicts
          path: target/axe/*.json
          if-no-files-found: warn

  aggregate-report:
    needs: run-by-tag
    if: ${{ always() }}        # <-- run even if some matrix jobs failed
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Pull all JSONs into one flat folder
      - name: Download all per-tag JSON artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: axe-json-*
          path: merged-axe
          merge-multiple: true

      - name: Show merged contents
        run: |
          echo "== merged-axe =="
          ls -al merged-axe || true
          echo "Merged FAIL count: $(ls -1 merged-axe/FAIL-*.json 2>/dev/null | wc -l)"
          echo "Merged ALL  count:  $(ls -1 merged-axe/*.json 2>/dev/null | wc -l)"

      # Compile tests so AxeFailOnlyReporter (in test sources) is on the classpath
      - name: Compile test classes
        run: mvn -q -DskipTests -Dtest=!Dummy test-compile

      # Generate fail-only HTML from FAIL-*.json in merged-axe
      - name: Generate fail-only accessibility report (from full JSONs)
        env:
          # Use the same filters the tests used (optional)
          AXE_SKIP_RULES: ${{ env.AXE_SKIP_RULES }}
          AXE_MIN_IMPACT: ${{ env.AXE_MIN_IMPACT }}
        run: |
          mkdir -p merged-axe
          mvn -q org.codehaus.mojo:exec-maven-plugin:3.3.0:java \
            -Dexec.mainClass=com.automationCalculator.accessibility.AxeFailuresFromFullReporter \
            -Dexec.classpathScope=test \
            -Dexec.arguments="merged-axe"

      - name: Upload accessibility failures (combined)
        uses: actions/upload-artifact@v4
        with:
          name: axe-failures
          path: merged-axe/failures.html
          if-no-files-found: warn

      - name: Summary
        run: |
          echo "## Accessibility Failures (Combined)" >> "$GITHUB_STEP_SUMMARY"
          echo "- Artifact: **axe-failures** (failures.html)" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON files merged: $(ls -1 merged-axe/*.json 2>/dev/null | wc -l)" >> "$GITHUB_STEP_SUMMARY"
          echo "- FAIL files merged: $(ls -1 merged-axe/FAIL-*.json 2>/dev/null | wc -l)" >> "$GITHUB_STEP_SUMMARY"
